# =============================================================================
# WEBSERV REPEATING IP/PORT CONFIGURATION FILE
# =============================================================================
#
# This configuration file tests the webserv's behavior when multiple servers
# are configured to listen on the same IP address and port combination. This
# scenario tests server selection logic and how the webserv handles conflicting
# server configurations.
#
# CONFIGURATION DETAILS:
# - Both servers listen on 127.0.0.1:8088
# - Server 1: webserv_1 (full functionality)
# - Server 2: webserv_2 (simple site with different root)
#
# TESTING SCENARIOS:
# - Server selection when multiple servers share same IP:port
# - Server name-based routing (if implemented)
# - Default server behavior
# - Configuration validation for duplicate bindings
#
# EXPECTED BEHAVIOR:
# The webserv_1 should either:
# 1. Use the first server configuration found
# 2. Use server_name matching for routing
# 3. Report a configuration error for duplicate bindings
#
# USAGE:
# ./webserv configs/repeating_IP_port.conf
# Then access: http://127.0.0.1:8088
#
# =============================================================================

server {
	server_name webserv_1
	listen 8088
	host 127.0.0.1
	root /www/webserv_project
	index index.html
	client_max_body_size 10000000
	error_page 404 errors/not_found_404.html
	error_page 413 errors/payload_too_large_413.html

	location /old {
		allow_methods GET
		return /redirect/redirection.html
		index index.html
	}

	location /redirect {
		allow_methods GET
		autoindex off
		index redirection.html
	}

	location / {
		allow_methods GET
		autoindex on
		index index.html
	}

	location /uploads {
		allow_methods GET DELETE POST
		upload_to uploads
		autoindex on
		index index.html
	}

	location /cgi-bin {
		allow_methods GET POST
		cgi_path cgi-bin
		cgi_ext .py .js
		index index.html
	}

	location .py {
		allow_methods GET POST
		cgi_path .
		cgi_ext .py
		index index.html
	}

	location /imgs {
		allow_methods GET
		autoindex on
		index index.html
	}

	location /nested {
		allow_methods GET
		autoindex on
		index nested.html
	}

	location /upload.html {
		allow_methods GET POST
		index upload.html
	}

	location /delete.html {
		allow_methods GET DELETE
		index delete.html
	}

	location /favicon.ico {
		allow_methods GET
		index index.html
		autoindex off
	}
}

server {
	server_name webserv_2
	listen 8088
	host 127.0.0.1
	root /home/lhaas/42/webserver/www/site2
	index index.html
	client_max_body_size 10000

	location / {
		allow_methods GET
		autoindex off
		index index.html
	}

	location /favicon.ico {
		allow_methods GET
		index index.html
		autoindex off
	}
}
