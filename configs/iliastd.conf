# =============================================================================
# COMPREHENSIVE WEBSERVER CONFIGURATION - MAXIMUM ROUTE COVERAGE
# =============================================================================
# Server: webserv_comprehensive | Port: 8090 | Host: 127.0.0.1
# Root: /home/ilyam/42/webserver/www
# Features: ALL HTTP methods, CGI (Python+JS), Upload/Delete, Autoindex,
#           Redirects, Static files, Error pages, Multiple location types
# =============================================================================

server {
    # Server identification and network settings
    server_name webserv_comprehensive
    listen 8090
    host 127.0.0.1
    root /home/ilyam/42/webserver/www
    index index.html
    client_max_body_size 100

    # ========================================================================
    # BASIC HTTP METHODS - Root endpoint with all methods
    # ========================================================================
    location / {
        allow_methods GET HEAD POST PUT PATCH DELETE OPTIONS TRACE CONNECT
        index index.html
        autoindex off
    }

    # ========================================================================
    # STATIC FILE SERVING & DIRECTORY LISTING
    # ========================================================================

    # Favicon - exact path matching
    location /favicon.ico {
        allow_methods GET HEAD
        index favicon.ico
    }

    # Images directory with autoindex enabled
    location /imgs {
        allow_methods GET HEAD
        index nonexistent.html
        autoindex on
    }

    # CSS directory with autoindex
    location /css {
        allow_methods GET HEAD
        index nonexistent.html
        autoindex on
    }

    # JavaScript directory with autoindex
    location /js {
        allow_methods GET HEAD
        index nonexistent.html
        autoindex on
    }

    # Test directory with autoindex
    location /testdir {
        allow_methods GET HEAD
        index nonexistent.html
        autoindex on
    }

    # Errors directory for error page testing
    location /errors {
        allow_methods GET HEAD
        index nonexistent.html
        autoindex on
    }

    # ========================================================================
    # CGI FUNCTIONALITY - Multiple script types and extensions
    # ========================================================================

    # CGI scripts directory - Python and JavaScript
    location /cgi-bin {
        allow_methods GET HEAD POST
        cgi_path /home/ilyam/42/webserver/www/cgi-bin
        cgi_ext .py .js .sh .pl .rb
        index index.html
    }

    # Alternative CGI location for testing
    location /scripts {
        allow_methods GET HEAD POST
        cgi_path /home/ilyam/42/webserver/www/cgi-bin
        cgi_ext .py .js
        index index.html
    }

    # ========================================================================
    # FILE UPLOAD & MANAGEMENT
    # ========================================================================

    # Upload form page
    location /upload {
        allow_methods GET HEAD
        index upload.html
    }

    # File upload endpoint with all methods
    location /uploads {
        allow_methods GET HEAD POST PUT DELETE OPTIONS
        upload_to /home/ilyam/42/webserver/www/uploads
        index upload_success.html
    }

    # Alternative upload location
    location /files {
        allow_methods GET HEAD POST DELETE
        upload_to /home/ilyam/42/webserver/www/uploads
        index index.html
    }

    # ========================================================================
    # API ENDPOINTS - RESTful design
    # ========================================================================

    # Main API endpoint
    location /api {
        allow_methods GET HEAD POST PUT PATCH DELETE OPTIONS
        index api.html
        autoindex off
    }

    # API v1 namespace
    location /api/v1 {
        allow_methods GET HEAD POST PUT PATCH DELETE OPTIONS
        index api_v1.html
        autoindex off
    }

    # API users endpoint
    location /api/v1/users {
        allow_methods GET HEAD POST PUT PATCH DELETE OPTIONS
        index api_users.html
        autoindex off
    }

    # API posts endpoint
    location /api/v1/posts {
        allow_methods GET HEAD POST PUT PATCH DELETE OPTIONS
        index api_posts.html
        autoindex off
    }

    # ========================================================================
    # ADMIN & MANAGEMENT AREAS
    # ========================================================================

    # Admin dashboard
    location /admin {
        allow_methods GET HEAD
        index admin.html
        autoindex off
    }

    # Admin users management
    location /admin/users {
        allow_methods GET HEAD POST PUT DELETE
        index admin_users.html
        autoindex off
    }

    # Admin settings
    location /admin/settings {
        allow_methods GET HEAD POST PUT
        index admin_settings.html
        autoindex off
    }

    # ========================================================================
    # UTILITY ENDPOINTS
    # ========================================================================

    # Health check endpoint
    location /health {
        allow_methods GET HEAD
        index health.html
        autoindex off
    }

    # Status endpoint
    location /status {
        allow_methods GET HEAD
        index status.html
        autoindex off
    }

    # Metrics endpoint
    location /metrics {
        allow_methods GET HEAD
        index metrics.html
        autoindex off
    }

    # ========================================================================
    # REDIRECTS - Various redirect scenarios
    # ========================================================================

    # Permanent redirect - old page moved
    location /old-page {
        allow_methods GET HEAD
        return /upload.html
    }

    # Temporary redirect - maintenance
    location /maintenance {
        allow_methods GET HEAD
        return /status.html
    }

    # API version redirect
    location /api/v2 {
        allow_methods GET HEAD POST PUT PATCH DELETE OPTIONS
        return /api/v1
    }

    # Legacy redirect
    location /legacy {
        allow_methods GET HEAD
        return /admin
    }

    # ========================================================================
    # SPECIALIZED ENDPOINTS
    # ========================================================================

    # WebSocket endpoint (for future use)
    location /ws {
        allow_methods GET HEAD
        index websocket.html
    }

    # Webhook endpoint
    location /webhook {
        allow_methods POST PUT
        index webhook_response.html
    }

    # Download endpoint
    location /download {
        allow_methods GET HEAD
        index download.html
    }

    # Search endpoint
    location /search {
        allow_methods GET HEAD POST
        index search.html
    }

    # ========================================================================
    # ERROR PAGE CONFIGURATION
    # ========================================================================
    error_page 400 400.html
    error_page 401 401.html
    error_page 403 403.html
    error_page 404 404.html
    error_page 405 405.html
    error_page 413 413.html
    error_page 500 500.html
    error_page 502 502.html
    error_page 503 503.html
}

# -----------------------------------------------------------------------------
# COMPREHENSIVE TEST CASES - MAXIMUM ROUTE COVERAGE TESTING
# -----------------------------------------------------------------------------
# Server: http://localhost:8090
# Start with: ./webserv configs/iliastd.conf

# =============================================================================
# BASIC HTTP METHODS (ALL METHODS SUPPORTED)
# =============================================================================
# Root endpoint supports ALL HTTP methods:
# curl -X GET http://localhost:8090/         -> index.html
# curl -X HEAD http://localhost:8090/        -> headers only
# curl -X POST http://localhost:8090/        -> method allowed
# curl -X PUT http://localhost:8090/         -> method allowed
# curl -X PATCH http://localhost:8090/       -> method allowed
# curl -X DELETE http://localhost:8090/      -> method allowed
# curl -X OPTIONS http://localhost:8090/     -> CORS preflight
# curl -X TRACE http://localhost:8090/       -> method allowed
# curl -X CONNECT http://localhost:8090/     -> method allowed

# =============================================================================
# STATIC FILE SERVING & DIRECTORY LISTING
# =============================================================================
# Favicon:
# curl http://localhost:8090/favicon.ico      -> favicon.ico

# Directory listings with autoindex:
# curl http://localhost:8090/imgs             -> image directory
# curl http://localhost:8090/css              -> CSS directory
# curl http://localhost:8090/js               -> JavaScript directory
# curl http://localhost:8090/testdir          -> test directory
# curl http://localhost:8090/errors           -> error pages directory

# =============================================================================
# CGI FUNCTIONALITY - MULTIPLE SCRIPT TYPES
# =============================================================================
# Python CGI scripts:
# curl http://localhost:8090/cgi-bin/hello.py         -> execute Python
# curl http://localhost:8090/scripts/hello.py         -> alt CGI location
# curl -X POST -d "name=test" http://localhost:8090/cgi-bin/hello.py
# curl "http://localhost:8090/cgi-bin/hello.py?param=value"

# JavaScript CGI scripts:
# curl http://localhost:8090/cgi-bin/hello.js         -> execute Node.js
# curl http://localhost:8090/scripts/hello.js         -> alt CGI location
# curl -X POST -d "data=test" http://localhost:8090/cgi-bin/hello.js
# curl "http://localhost:8090/cgi-bin/hello.js?test=123"

# CGI error handling:
# curl http://localhost:8090/cgi-bin/nonexistent.py   -> 404
# curl http://localhost:8090/cgi-bin/nonexistent.js   -> 404

# =============================================================================
# FILE UPLOAD & MANAGEMENT
# =============================================================================
# Upload forms:
# curl http://localhost:8090/upload                  -> upload.html
# curl http://localhost:8090/files                   -> alt upload page

# File uploads (multipart):
# curl -X POST -F "file=@test.txt" http://localhost:8090/uploads
# curl -X POST -F "file=@test.txt" http://localhost:8090/files

# File management:
# curl http://localhost:8090/uploads                 -> directory listing
# curl -X DELETE http://localhost:8090/uploads/test.txt
# curl -X PUT http://localhost:8090/uploads          -> method allowed
# curl -X OPTIONS http://localhost:8090/uploads      -> CORS preflight

# =============================================================================
# RESTFUL API ENDPOINTS
# =============================================================================
# Main API:
# curl http://localhost:8090/api                     -> api.html
# curl -X POST http://localhost:8090/api             -> method allowed
# curl -X PUT http://localhost:8090/api              -> method allowed
# curl -X PATCH http://localhost:8090/api            -> method allowed
# curl -X DELETE http://localhost:8090/api           -> method allowed
# curl -X OPTIONS http://localhost:8090/api          -> CORS preflight

# API versioning:
# curl http://localhost:8090/api/v1                  -> api_v1.html
# curl http://localhost:8090/api/v1/users            -> api_users.html
# curl http://localhost:8090/api/v1/posts            -> api_posts.html

# =============================================================================
# ADMIN & MANAGEMENT AREAS
# =============================================================================
# Admin dashboard:
# curl http://localhost:8090/admin                   -> admin.html
# curl http://localhost:8090/admin/users             -> admin_users.html
# curl http://localhost:8090/admin/settings          -> admin_settings.html

# Admin operations:
# curl -X POST http://localhost:8090/admin/users     -> create user
# curl -X PUT http://localhost:8090/admin/settings   -> update settings
# curl -X DELETE http://localhost:8090/admin/users   -> delete user

# =============================================================================
# UTILITY ENDPOINTS
# =============================================================================
# Monitoring:
# curl http://localhost:8090/health                  -> health.html
# curl http://localhost:8090/status                  -> status.html
# curl http://localhost:8090/metrics                 -> metrics.html

# =============================================================================
# REDIRECTS - VARIOUS SCENARIOS
# =============================================================================
# Page redirects:
# curl http://localhost:8090/old-page                -> redirect to /upload.html
# curl http://localhost:8090/maintenance             -> redirect to /status.html
# curl http://localhost:8090/legacy                  -> redirect to /admin

# API redirects:
# curl http://localhost:8090/api/v2                  -> redirect to /api/v1
# curl http://localhost:8090/api/v2/users            -> redirect to /api/v1

# =============================================================================
# SPECIALIZED ENDPOINTS
# =============================================================================
# Web features:
# curl http://localhost:8090/ws                      -> websocket.html
# curl -X POST http://localhost:8090/webhook         -> webhook_response.html

# User features:
# curl http://localhost:8090/download                -> download.html
# curl http://localhost:8090/search                  -> search.html
# curl -X POST http://localhost:8090/search          -> search with POST

# =============================================================================
# ERROR HANDLING & EDGE CASES
# =============================================================================
# 404 errors:
# curl http://localhost:8090/nonexistent             -> 404.html
# curl http://localhost:8090/cgi-bin/bad.py          -> 404.html
# curl http://localhost:8090/api/v3                  -> 404.html

# Method not allowed:
# curl -X POST http://localhost:8090/favicon.ico     -> 405 Method Not Allowed
# curl -X DELETE http://localhost:8090/admin         -> 405 Method Not Allowed
# curl -X POST http://localhost:8090/health          -> 405 Method Not Allowed

# Custom error pages:
# - Trigger 400: Malformed request
# - Trigger 403: Forbidden access
# - Trigger 413: File too large
# - Trigger 500: Server error
# - Trigger 502: Bad gateway
# - Trigger 503: Service unavailable

# =============================================================================
# PERFORMANCE & LOAD TESTING
# =============================================================================
# Multiple concurrent requests:
# for i in {1..10}; do curl -s http://localhost:8090/api & done

# Large file uploads:
# dd if=/dev/zero of=bigfile bs=1M count=10
# curl -X POST -F "file=@bigfile" http://localhost:8090/uploads

# CGI stress testing:
# for i in {1..5}; do curl -s http://localhost:8090/cgi-bin/hello.py & done

# =============================================================================
# SECURITY TESTING
# =============================================================================
# Path traversal attempts (should be blocked):
# curl http://localhost:8090/../../../etc/passwd     -> 400 Bad Request
# curl http://localhost:8090/cgi-bin/../../etc/passwd -> 400 Bad Request

# Invalid methods (should be rejected):
# curl -X INVALID http://localhost:8090/            -> 400 Bad Request

# Oversized requests (should be rejected):
# curl -X POST -d "$(dd if=/dev/zero bs=1M count=101)" http://localhost:8090/api

# =============================================================================
# START THE COMPREHENSIVE SERVER:
# ./webserv configs/iliastd.conf
# Server listens on: http://localhost:8090
#
# This configuration demonstrates MAXIMUM route coverage with:
# - 30+ unique endpoints
# - All HTTP methods (GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS, TRACE, CONNECT)
# - CGI execution (Python, JavaScript, and more)
# - File uploads and management
# - Directory listings and static file serving
# - RESTful API design with versioning
# - Administrative interfaces
# - Redirects and URL rewriting
# - Comprehensive error handling
# - Security features and edge case handling
# =============================================================================
